{"version":3,"file":"static/js/895.fe448d7b.chunk.js","mappings":"4KACA,G,OAAkG,0BAAlG,EAA0I,8BAA1I,EAAiL,wBAAjL,EAAuP,4BAAvP,EAA8R,0BAA9R,EAAkU,yBAAlU,EAAiW,qBAAjW,EAAgY,yBAAhY,EAAga,sBAAha,EAA6b,sBAA7b,EAA8d,0B,oBCsB9d,EAdmB,SAACA,GAChB,IAAIC,EAAO,YAAcD,EAAME,GAC/B,OACI,0BACI,iBAAKC,UAAWC,EAAhB,WACI,gBACIC,IAAI,0JACJC,IAAI,oBACR,SAAC,KAAD,CAASH,UAAWC,EAAWG,GAAIN,EAAnC,SAA0CD,EAAMQ,WAI/D,ECQD,EArBgB,SAACR,GAEb,OACI,4BACI,iBAAKG,UAAWC,EAAhB,WACI,gBACIC,IAAI,0JACJC,IAAK,OAAQH,UAAWC,KAE5B,gBAAKD,UAAWC,EAAhB,UACI,4BACI,gBAAKD,UAAWC,EAAhB,SAAyBJ,EAAMQ,QAC/B,gBAAKL,UAAWC,EAAhB,SAAyBJ,EAAMS,mBAI3C,oBAGX,E,wCCaD,EA1BgB,SAAC,GAAkD,IAAjDC,EAAgD,EAAhDA,YAAaC,EAAmC,EAAnCA,YAEvBC,EAAOF,EACPG,EAAkBD,EAAME,QAAQC,KAAI,SAAAC,GAAC,OAAI,SAAC,EAAD,CAAuBR,KAAMQ,EAAER,KAAMN,GAAIc,EAAEd,IAA1Bc,EAAEd,GAAvB,IACrCe,EAAmBL,EAAMM,SAASH,KAAI,SAAAI,GAAC,OAAI,SAAC,EAAD,CAAoBV,QAASU,EAAEV,QAASD,KAAMW,EAAEX,MAAlCW,EAAEjB,GAApB,IAM3C,OACI,iBAAKC,UAAWC,EAAhB,WACI,iBAAKD,UAAWC,EAAhB,qBAEI,gBAAKD,UAAWC,EAAhB,SACKS,QAGT,iBAAKV,UAAWC,EAAhB,UACKa,GACD,SAACG,EAAD,CAAqBC,SAdX,SAACC,GACnBX,EAAYW,EAAOC,eACtB,SAgBJ,EAQKC,GAAeC,EAAAA,EAAAA,GAAiB,KAahCL,GAAsBM,EAAAA,EAAAA,GAA8B,CAACC,KAAM,wBAArCD,EAX4C,SAAC1B,GACrE,OAAO,iBAAMqB,SAAUrB,EAAM4B,aAAtB,UACH,4BACI,SAACC,EAAA,EAAD,CAAOC,UAAWC,EAAAA,GAAUvB,KAAM,iBAAkBwB,YAAa,qBAC1DC,SAAU,CAACC,EAAAA,EAAUV,MAC5B,iDAIX,I,8BC9BD,GAAeW,EAAAA,EAAAA,KAAkBC,EAAAA,EAAAA,KAZT,SAACxB,GACrB,MAAO,CACHF,YAAaE,EAAMF,YAE1B,IAE0B,SAAC2B,GACxB,MAAO,CACH1B,YAAa,SAACY,GAAD,OAAoBc,GAASC,EAAAA,EAAAA,IAAmBf,GAAhD,EAEpB,IAE8EgB,EAAAA,EAA/E,CAAiGC,E","sources":["webpack://react-kabzda/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/Message/Message.tsx","components/Dialogs/Dialogs.tsx","components/Dialogs/DialogsContainer.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"content\":\"Dialogs_content__5ITzU\",\"avatarka\":\"Dialogs_avatarka__Z+H10\",\"dialogs\":\"Dialogs_dialogs__oI-2o\",\"dialogsItems\":\"Dialogs_dialogsItems__5-TbS\",\"dialog\":\"Dialogs_dialog__wVtZr\",\"active\":\"Dialogs_active__WbcyT\",\"dialogWrap\":\"Dialogs_dialogWrap__ZLmw1\",\"messages\":\"Dialogs_messages__Dd9uD\",\"message\":\"Dialogs_message__v9u8e\",\"ava\":\"Dialogs_ava__4ljSO\",\"navName\":\"Dialogs_navName__TH-tJ\",\"name\":\"Dialogs_name__v3W2M\",\"text\":\"Dialogs_text__lP1AI\",\"textWrap\":\"Dialogs_textWrap__DyS5d\"};","import React from \"react\";\r\nimport s from './../Dialogs.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\ntype DialogItem = {\r\n    id: number\r\n    name: string\r\n}\r\n\r\nconst DialogItem = (props:DialogItem) => {\r\n    let path = '/dialogs/' + props.id\r\n    return (\r\n        <div>\r\n            <div className={s.dialog}>\r\n                <img\r\n                    src=\"https://static.vecteezy.com/system/resources/previews/001/840/612/non_2x/picture-profile-icon-male-icon-human-or-people-sign-and-symbol-free-vector.jpg\"\r\n                    alt=\"profile avatar\"/>\r\n                <NavLink className={s.navName} to={path}>{props.name}</NavLink>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem","import React from \"react\";\r\nimport s from './../Dialogs.module.css'\r\n\r\ntype MessagePropsType = {\r\n    message:string\r\n    name:string\r\n}\r\n\r\nconst Message = (props:MessagePropsType) => {\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.message}>\r\n                <img\r\n                    src='https://static.vecteezy.com/system/resources/previews/001/840/612/non_2x/picture-profile-icon-male-icon-human-or-people-sign-and-symbol-free-vector.jpg'\r\n                    alt={'logo'} className={s.ava}/>\r\n\r\n                <div className={s.textWrap}>\r\n                    <div>\r\n                        <div className={s.name}>{props.name}</div>\r\n                        <div className={s.text}>{props.message}</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message","import React from \"react\";\r\nimport s from './Dialogs.module.css'\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {DialogPageType} from \"../../redux/store\";\r\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\nimport {Textarea} from \"../common/FormsControls/FormsControls\";\r\n\r\ntype DialogsPropsType = {\r\n    dialogsPage: DialogPageType\r\n    sendMessage: (newMessageBody: string) => void\r\n}\r\n\r\nconst Dialogs = ({dialogsPage, sendMessage}: DialogsPropsType) => {\r\n\r\n    let state =dialogsPage\r\n    let dialogsElements = state.dialogs.map(d => <DialogItem key={d.id} name={d.name} id={d.id}/>)\r\n    let messagesElements = state.messages.map(m => <Message key={m.id} message={m.message} name={m.name}/>)\r\n\r\n    const addNewMessage = (values: FormAddMessageType) => {\r\n        sendMessage(values.newMessageBody)\r\n    }\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogWrap}>\r\n                Dialogs\r\n                <div className={s.dialogsItems}>\r\n                    {dialogsElements}\r\n                </div>\r\n            </div>\r\n            <div className={s.messages}>\r\n                {messagesElements}\r\n                <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs\r\n\r\ntype FormAddMessageType = {\r\n    newMessageBody: string\r\n}\r\n\r\nconst maxLength100 = maxLengthCreator(100)\r\n\r\nconst AddMessageForm: React.FC<InjectedFormProps<FormAddMessageType>> = (props) => {\r\n    return <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n            <Field component={Textarea} name={'newMessageBody'} placeholder={'Enter your message'}\r\n                   validate={[required, maxLength100]}/>\r\n            <button>Send message</button>\r\n        </div>\r\n    </form>\r\n\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm<FormAddMessageType>({form: 'dialogAddMessageForm'})(AddMessageForm)","import React from \"react\";\r\nimport {InitialStateType, sendMessageCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport {compose, Dispatch} from \"redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\n\r\nexport type mapStateToPropsType = {\r\n    dialogsPage: InitialStateType\r\n}\r\ntype mapDispatchToPropsType = {\r\n    sendMessage: (newMessageBody: string) => void\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): mapStateToPropsType => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): mapDispatchToPropsType => {\r\n    return {\r\n        sendMessage: (newMessageBody) => dispatch(sendMessageCreator(newMessageBody))\r\n    }\r\n}\r\n\r\nexport default compose<React.FC>(connect(mapStateToProps, mapDispatchToProps), withAuthRedirect)(Dialogs)\r\n"],"names":["props","path","id","className","s","src","alt","to","name","message","dialogsPage","sendMessage","state","dialogsElements","dialogs","map","d","messagesElements","messages","m","AddMessageFormRedux","onSubmit","values","newMessageBody","maxLength100","maxLengthCreator","reduxForm","form","handleSubmit","Field","component","Textarea","placeholder","validate","required","compose","connect","dispatch","sendMessageCreator","withAuthRedirect","Dialogs"],"sourceRoot":""}